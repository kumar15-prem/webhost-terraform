Step-by-Step Procedure to Create an Ubuntu EC2 Instance with NGINX
Prerequisites
AWS Account: Ensure you have an AWS account.
AWS CLI: (Optional) Install and configure the AWS CLI to interact with your AWS resources.
SSH Key Pair: Create an SSH key pair in AWS and note the key name for access.
Terraform: Ensure Terraform version 1.9.7 is installed.


Step 1: Install Terraform Version 1.9.7
wget https://releases.hashicorp.com/terraform/1.9.7/terraform_1.9.7_linux_amd64.zip
sudo apt-get install unzip
unzip terraform_1.9.7_linux_amd64.zip
sudo mv terraform /usr/local/bin/
terraform -version

Step 2: Set Up Terraform Configuration Files
mkdir terraform-nginx
cd terraform-nginx

Step 3: Create the Configuration Files
main.tf
provider "aws" {
  region = var.aws_region
}

resource "aws_instance" "nginx_server" {
  ami           = var.ami_id
  instance_type = var.instance_type
  key_name      = var.key_name

  # Install NGINX using user data
  user_data = file("userdata.sh")

  tags = {
    Name = "NginxServer"
  }

  # Security Group for allowing HTTP and SSH
  vpc_security_group_ids = [aws_security_group.nginx_sg.id]
}

# Create a security group
resource "aws_security_group" "nginx_sg" {
  name        = "nginx_security_group"
  description = "Allow HTTP and SSH traffic"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Output the public IP of the instance
output "instance_public_ip" {
  value = aws_instance.nginx_server.public_ip
}

variables.tf
variable "aws_region" {
  description = "AWS region"
  default     = "ap-south-1" # Change to your desired region
}

variable "ami_id" {
  description = "AMI ID for the Ubuntu instance"
  default     = "ami-12345678" # Replace with the actual AMI ID for Ubuntu
}

variable "instance_type" {
  description = "Type of EC2 instance"
  default     = "t2.micro"
}

variable "key_name" {
  description = "AWS Key Pair for SSH access"
  default     = "my-key-pair" # Replace with your key pair name
}

userdata.sh
#!/bin/bash
# Update the package index
sudo apt-get update -y

# Install NGINX and Git
sudo apt-get install -y nginx git

# Remove any existing content
cd /var/www/html
sudo rm -rf *

# Clone the GitHub repository
sudo git clone https://github.com/SajidBhatti786/Ecommerce-website.git .

# Restart NGINX to apply changes
sudo systemctl restart nginx

outputs.tf
output "public_dns" {
  description = "The public DNS of the instance"
  value       = aws_instance.nginx_server.public_dns
}

output "public_ip" {
  description = "The public IP of the instance"
  value       = aws_instance.nginx_server.public_ip
}

Step 4: Initialize Terraform
terraform init

Step 5: Validate the Terraform Configuration
terraform validate

Step 6: Apply the Terraform Configuration
terraform apply

Step 7: Access the NGINX Server
http://<instance_public_ip>
